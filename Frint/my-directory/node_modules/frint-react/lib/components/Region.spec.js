'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _chai = require('chai');

var _toArray = require('lodash/toArray');

var _toArray2 = _interopRequireDefault(_toArray);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _Subject = require('rxjs/Subject');

var _sinon = require('sinon');

var _sinon2 = _interopRequireDefault(_sinon);

var _frint = require('frint');

var _render = require('../render');

var _render2 = _interopRequireDefault(_render);

var _observe = require('./observe');

var _observe2 = _interopRequireDefault(_observe);

var _Region = require('./Region');

var _Region2 = _interopRequireDefault(_Region);

var _Region3 = require('../services/Region');

var _Region4 = _interopRequireDefault(_Region3);

var _streamProps = require('../streamProps');

var _streamProps2 = _interopRequireDefault(_streamProps);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable import/no-extraneous-dependencies, func-names, react/prop-types */
/* global describe, it, window, document, beforeEach, resetDOM */


describe('frint-react › components › Region', function () {
  beforeEach(function () {
    resetDOM();
  });

  it('is a function', function () {
    (0, _chai.expect)(_Region2.default).to.be.a('function');
  });

  it('renders empty region when no root app available', function () {
    function MyComponent() {
      return _react2.default.createElement(
        'div',
        { id: 'my-component' },
        _react2.default.createElement(_Region2.default, { name: 'left-sidebar' })
      );
    }

    _reactDom2.default.render(_react2.default.createElement(MyComponent, null), document.getElementById('root'));

    var element = document.getElementById('my-component');
    (0, _chai.expect)(element.innerHTML).to.eql('');
  });

  it('renders apps with weighted ordering', function () {
    // root
    function RootComponent() {
      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(_Region2.default, { name: 'sidebar' })
      );
    }
    var RootApp = (0, _frint.createApp)({
      name: 'RootApp',
      providers: [{ name: 'component', useValue: RootComponent }]
    });

    // apps
    function App1Component() {
      return _react2.default.createElement(
        'p',
        null,
        'App 1'
      );
    }
    var App1 = (0, _frint.createApp)({
      name: 'App1',
      providers: [{ name: 'component', useValue: App1Component }]
    });

    function App2Component() {
      return _react2.default.createElement(
        'p',
        null,
        'App 2'
      );
    }
    var App2 = (0, _frint.createApp)({
      name: 'App2',
      providers: [{ name: 'component', useValue: App2Component }]
    });

    // render
    window.app = new RootApp();
    (0, _render2.default)(window.app, document.getElementById('root'));

    // register apps
    window.app.registerApp(App1, {
      regions: ['sidebar'],
      weight: 10
    });
    window.app.registerApp(App2, {
      regions: ['sidebar'],
      weight: 5
    });

    // verify
    var paragraphs = document.querySelectorAll('p'); // @TODO: enzyme can be used?
    (0, _chai.expect)(paragraphs[0].innerHTML).to.equal('App 2');
    (0, _chai.expect)(paragraphs[1].innerHTML).to.equal('App 1');
  });

  it('warns when apps subscription emits an error', function () {
    // root
    function RootComponent() {
      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(_Region2.default, { name: 'sidebar' }),
        _react2.default.createElement(_Region2.default, { name: 'footer' })
      );
    }
    var RootApp = (0, _frint.createApp)({
      name: 'RootApp',
      providers: [{ name: 'component', useValue: RootComponent }]
    });

    // fake an error
    window.app = new RootApp();
    var subject$ = new _Subject.Subject();
    window.app.getApps$ = function getApps$() {
      return subject$;
    };

    // render
    (0, _render2.default)(window.app, document.getElementById('root'));

    // verify
    var stub = _sinon2.default.stub(console, 'warn');
    subject$.error(new Error('Something bad happened...'));

    _sinon2.default.assert.calledTwice(stub); // two Regions
  });

  it('renders single and multi-instance apps', function () {
    // root
    var todos = [{ id: '1', title: 'First todo' }, { id: '2', title: 'Second todo' }, { id: '3', title: 'Third todo' }];
    var rootComponentInstance = void 0; // @TODO: hack

    var RootComponent = function (_React$Component) {
      _inherits(RootComponent, _React$Component);

      function RootComponent() {
        _classCallCheck(this, RootComponent);

        return _possibleConstructorReturn(this, (RootComponent.__proto__ || Object.getPrototypeOf(RootComponent)).apply(this, arguments));
      }

      _createClass(RootComponent, [{
        key: 'render',
        value: function render() {
          rootComponentInstance = this;

          return _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(
              'p',
              { id: 'root-text' },
              'Hello World from Root'
            ),
            _react2.default.createElement(_Region2.default, { name: 'sidebar' }),
            _react2.default.createElement(
              'ul',
              { className: 'todos' },
              todos.map(function (todo) {
                return _react2.default.createElement(
                  'li',
                  { key: 'todo-item-' + todo.id },
                  todo.title,
                  _react2.default.createElement(_Region2.default, {
                    data: { todo: todo },
                    name: 'todo-item',
                    uniqueKey: 'todo-item-' + todo.id
                  })
                );
              })
            )
          );
        }
      }]);

      return RootComponent;
    }(_react2.default.Component);

    var RootApp = (0, _frint.createApp)({
      name: 'RootApp',
      providers: [{ name: 'component', useValue: RootComponent }]
    });

    // apps
    function App1Component() {
      return _react2.default.createElement(
        'p',
        { id: 'app1-text' },
        'Hello World from App1'
      );
    }
    var App1 = (0, _frint.createApp)({
      name: 'App1',
      providers: [{ name: 'component', useValue: App1Component }]
    });
    var App2Component = (0, _observe2.default)(function (app) {
      return (0, _streamProps2.default)().set(app.get('region').getData$(), function (data) {
        return { todo: data.todo };
      }).get$();
    })(function (_ref) {
      var todo = _ref.todo;
      return _react2.default.createElement(
        'p',
        { className: 'app2-text' },
        'Hello World from App2 - ',
        todo.title
      );
    });
    var App2 = (0, _frint.createApp)({
      name: 'App2',
      providers: [{ name: 'component', useValue: App2Component }, { name: 'region', useClass: _Region4.default }]
    });

    // render
    window.app = new RootApp();
    (0, _render2.default)(window.app, document.getElementById('root'));
    (0, _chai.expect)(document.getElementById('root-text').innerHTML).to.equal('Hello World from Root');

    // register apps
    window.app.registerApp(App1, {
      regions: ['sidebar'],
      weight: 0
    });
    window.app.registerApp(App2, {
      regions: ['todo-item'],
      weight: 1,
      multi: true
    });

    // verify single instance app
    (0, _chai.expect)(document.getElementById('app1-text').innerHTML).to.equal('Hello World from App1');

    // verify multi instance app
    var elements = (0, _toArray2.default)(document.getElementsByClassName('app2-text'));
    elements.forEach(function (el, index) {
      (0, _chai.expect)(el.innerHTML).to.contain('Hello World from App2 - ');
      (0, _chai.expect)(el.innerHTML).to.contain(todos[index].title);
    });

    // change in props
    todos[1].title = 'Second todo [updated]';
    rootComponentInstance.forceUpdate();
    elements.forEach(function (el, index) {
      (0, _chai.expect)(el.innerHTML).to.contain(todos[index].title);
    });

    // unmount
    _reactDom2.default.unmountComponentAtNode(document.getElementById('root'));
    (0, _chai.expect)((0, _toArray2.default)(document.getElementsByClassName('app2-text')).length).to.equal(0);
  });

  it('calls beforeDestroy when unmounting multi-instance apps', function () {
    // root
    var todos = [{ id: '1', title: 'First todo' }];
    var rootComponentInstance = void 0; // @TODO: hack

    var RootComponent = function (_React$Component2) {
      _inherits(RootComponent, _React$Component2);

      function RootComponent() {
        _classCallCheck(this, RootComponent);

        return _possibleConstructorReturn(this, (RootComponent.__proto__ || Object.getPrototypeOf(RootComponent)).apply(this, arguments));
      }

      _createClass(RootComponent, [{
        key: 'render',
        value: function render() {
          rootComponentInstance = this;

          return _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(
              'p',
              { id: 'root-text' },
              'Hello World from Root'
            ),
            _react2.default.createElement(_Region2.default, { name: 'sidebar' }),
            _react2.default.createElement(
              'ul',
              { className: 'todos' },
              todos.map(function (todo) {
                return _react2.default.createElement(
                  'li',
                  { key: 'todo-item-' + todo.id },
                  todo.title,
                  _react2.default.createElement(_Region2.default, {
                    data: { todo: todo },
                    name: 'todo-item',
                    uniqueKey: 'todo-item-' + todo.id
                  })
                );
              })
            )
          );
        }
      }]);

      return RootComponent;
    }(_react2.default.Component);

    var RootApp = (0, _frint.createApp)({
      name: 'RootApp',
      providers: [{ name: 'component', useValue: RootComponent }]
    });

    // app
    var AppComponent = (0, _observe2.default)(function (app) {
      return (0, _streamProps2.default)().set(app.get('region').getData$(), function (data) {
        return { todo: data.todo };
      }).get$();
    })(function (_ref2) {
      var todo = _ref2.todo;
      return _react2.default.createElement(
        'p',
        { className: 'app-text' },
        'Hello World from App - ',
        todo.title
      );
    });
    var beforeDestroyCalled = false;
    var App = (0, _frint.createApp)({
      name: 'App',
      beforeDestroy: function beforeDestroy() {
        beforeDestroyCalled = true;
      },
      providers: [{ name: 'component', useValue: AppComponent }, { name: 'region', useClass: _Region4.default }]
    });

    // render
    window.app = new RootApp();
    (0, _render2.default)(window.app, document.getElementById('root'));
    (0, _chai.expect)(document.getElementById('root-text').innerHTML).to.equal('Hello World from Root');

    // register app
    window.app.registerApp(App, {
      regions: ['todo-item'],
      multi: true
    });

    // verify multi instance app
    var elements = (0, _toArray2.default)(document.getElementsByClassName('app-text'));
    elements.forEach(function (el, index) {
      (0, _chai.expect)(el.innerHTML).to.contain('Hello World from App - ');
      (0, _chai.expect)(el.innerHTML).to.contain(todos[index].title);
    });

    // rootApp should have the instance
    (0, _chai.expect)(window.app.getAppInstance('App', 'todo-item', 'todo-item-1')).to.not.equal(null);

    // change in props
    todos.pop(); // empty the list
    rootComponentInstance.forceUpdate();
    var updatedElements = (0, _toArray2.default)(document.getElementsByClassName('app-text'));
    (0, _chai.expect)(updatedElements.length).to.equal(0);

    // check if beforeDestroy was called
    (0, _chai.expect)(beforeDestroyCalled).to.equal(true);

    // rootApp should not have the instance any more
    (0, _chai.expect)(window.app.getAppInstance('App', 'todo-item', 'todo-item-1')).to.equal(null);
  });
});