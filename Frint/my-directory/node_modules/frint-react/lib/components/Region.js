'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _composeHandlers = require('frint-component-utils/lib/composeHandlers');

var _composeHandlers2 = _interopRequireDefault(_composeHandlers);

var _RegionHandler = require('frint-component-handlers/lib/RegionHandler');

var _RegionHandler2 = _interopRequireDefault(_RegionHandler);

var _ReactHandler = require('../handlers/ReactHandler');

var _ReactHandler2 = _interopRequireDefault(_ReactHandler);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable no-console, no-underscore-dangle, import/no-extraneous-dependencies */


var Region = function (_React$Component) {
  _inherits(Region, _React$Component);

  function Region() {
    var _ref;

    _classCallCheck(this, Region);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = _possibleConstructorReturn(this, (_ref = Region.__proto__ || Object.getPrototypeOf(Region)).call.apply(_ref, [this].concat(args)));

    _this._handler = (0, _composeHandlers2.default)(_ReactHandler2.default, _RegionHandler2.default, {
      component: _this
    });

    _this.state = _this._handler.getInitialData();
    return _this;
  }

  _createClass(Region, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState) {
      return this._handler.shouldUpdate(nextProps, nextState);
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._handler.app = this.context.app;
      this._handler.beforeMount();
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this._handler.afterUpdate(nextProps);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._handler.beforeDestroy();
    }
  }, {
    key: 'render',
    value: function render() {
      var listForRendering = this.state.listForRendering;


      if (listForRendering.length === 0) {
        return null;
      }

      return _react2.default.createElement(
        'div',
        null,
        listForRendering.map(function (item) {
          var Component = item.Component,
              name = item.name;


          return _react2.default.createElement(Component, { key: 'app-' + name });
        })
      );
    }
  }]);

  return Region;
}(_react2.default.Component);

Region.propTypes = {
  name: _propTypes2.default.string.isRequired,
  uniqueKey: _propTypes2.default.string,
  data: _propTypes2.default.any
};
Region.contextTypes = {
  app: _propTypes2.default.object
};
exports.default = Region;
module.exports = exports['default'];