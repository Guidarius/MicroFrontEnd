'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /* eslint-disable import/no-extraneous-dependencies, func-names, react/prop-types */
/* global describe, it, document, beforeEach, resetDOM */


var _chai = require('chai');

var _merge = require('rxjs/observable/merge');

var _of = require('rxjs/observable/of');

var _map = require('rxjs/operator/map');

var _scan = require('rxjs/operator/scan');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _enzyme = require('enzyme');

var _observe = require('./observe');

var _observe2 = _interopRequireDefault(_observe);

var _Provider = require('./Provider');

var _Provider2 = _interopRequireDefault(_Provider);

var _render = require('../render');

var _render2 = _interopRequireDefault(_render);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

describe('frint-react › components › observe', function () {
  beforeEach(function () {
    resetDOM();
  });

  it('is a function', function () {
    (0, _chai.expect)(_observe2.default).to.be.a('function');
  });

  it('generates Component bound to observable for props, without app in context', function () {
    function Component(_ref) {
      var counter = _ref.counter;

      return _react2.default.createElement(
        'p',
        { id: 'counter' },
        counter
      );
    }

    var ObservedComponent = (0, _observe2.default)(function () {
      var _context;

      return (_context = (0, _of.of)(1), _map.map).call(_context, function (number) {
        return { counter: number };
      });
    })(Component);

    _reactDom2.default.render(_react2.default.createElement(ObservedComponent, null), document.getElementById('root'));

    (0, _chai.expect)(document.getElementById('counter').innerHTML).to.equal('1');
  });

  it('generates Component with no additional impact, if no function is given', function () {
    function Component() {
      return _react2.default.createElement(
        'p',
        { id: 'text' },
        'Hello World'
      );
    }

    var ObservedComponent = (0, _observe2.default)()(Component);

    _reactDom2.default.render(_react2.default.createElement(ObservedComponent, null), document.getElementById('root'));

    (0, _chai.expect)(document.getElementById('text').innerHTML).to.equal('Hello World');
  });

  it('generates Component bound to observable for props, with app in context and props from parent component', function () {
    function Component(_ref2) {
      var name = _ref2.name,
          counter = _ref2.counter,
          parentProps = _ref2.parentProps;

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'p',
          { id: 'name' },
          name
        ),
        _react2.default.createElement(
          'p',
          { id: 'counter' },
          counter
        ),
        _react2.default.createElement(
          'p',
          { id: 'counterFromParent' },
          parentProps.counter
        )
      );
    }

    var ObservedComponent = (0, _observe2.default)(function (app, props$) {
      var _context2;

      return (_context2 = (0, _merge.merge)((0, _of.of)({ name: app.getName() }), _map.map.call(props$, function (parentProps) {
        return { parentProps: parentProps };
      })), _scan.scan).call(_context2, function (props, emitted) {
        return _extends({}, props, emitted);
      });
    })(Component);

    var ParentComponent = function (_React$Component) {
      _inherits(ParentComponent, _React$Component);

      function ParentComponent() {
        var _ref3;

        _classCallCheck(this, ParentComponent);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        var _this = _possibleConstructorReturn(this, (_ref3 = ParentComponent.__proto__ || Object.getPrototypeOf(ParentComponent)).call.apply(_ref3, [this].concat(args)));

        _this.incrementCounter = function () {
          _this.setState({
            counter: _this.state.counter + 1
          });
        };

        _this.state = {
          counter: 0
        };
        return _this;
      }

      _createClass(ParentComponent, [{
        key: 'render',
        value: function render() {
          var _this2 = this;

          return _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(
              'button',
              {
                id: 'increment',
                onClick: function onClick() {
                  return _this2.incrementCounter();
                },
                type: 'button'
              },
              'Increment'
            ),
            _react2.default.createElement(ObservedComponent, { counter: this.state.counter })
          );
        }
      }]);

      return ParentComponent;
    }(_react2.default.Component);

    var fakeApp = {
      get: function get() {
        return function () {
          for (var _len2 = arguments.length, props = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            props[_key2] = arguments[_key2];
          }

          return _react2.default.createElement(
            _Provider2.default,
            { app: fakeApp },
            _react2.default.createElement(ParentComponent, props)
          );
        };
      },
      beforeMount: function beforeMount() {},
      afterMount: function afterMount() {},
      beforeUnmount: function beforeUnmount() {},
      getName: function getName() {
        return 'FakeApp';
      }
    };

    (0, _render2.default)(fakeApp, document.getElementById('root'));

    (0, _chai.expect)(document.getElementById('name').innerHTML).to.equal('FakeApp');
    (0, _chai.expect)(document.getElementById('counter').innerHTML).to.equal('0');
    (0, _chai.expect)(document.getElementById('counterFromParent').innerHTML).to.equal('0');

    document.getElementById('increment').click();
    (0, _chai.expect)(document.getElementById('counter').innerHTML).to.equal('1');
    (0, _chai.expect)(document.getElementById('counterFromParent').innerHTML).to.equal('1');
  });

  it('can be tested with enzyme', function () {
    function ChildComponent() {
      return _react2.default.createElement(
        'p',
        null,
        'I am a child.'
      );
    }

    function Component(_ref4) {
      var name = _ref4.name;

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'p',
          { id: 'name' },
          name
        ),
        _react2.default.createElement(ChildComponent, null)
      );
    }

    var ObservedComponent = (0, _observe2.default)(function (app) {
      var _context3;

      return (_context3 = (0, _of.of)(app.getName()), _map.map).call(_context3, function (name) {
        return { name: name };
      });
    })(Component);

    var fakeApp = {
      getName: function getName() {
        return 'ShallowApp';
      }
    };

    function ComponentToRender(props) {
      return _react2.default.createElement(
        _Provider2.default,
        { app: fakeApp },
        _react2.default.createElement(ObservedComponent, props)
      );
    }

    var wrapper = (0, _enzyme.mount)(_react2.default.createElement(ComponentToRender, null));
    (0, _chai.expect)(wrapper.find(ObservedComponent)).to.have.length(1);
    (0, _chai.expect)(wrapper.find(ObservedComponent)).to.have.length(1);
    (0, _chai.expect)(wrapper.find(ChildComponent)).to.have.length(1);
    (0, _chai.expect)(wrapper.find('#name')).to.have.length(1);
    (0, _chai.expect)(wrapper.text()).to.contain('I am a child');
  });

  it('can return props synchronously', function () {
    function Component(_ref5) {
      var name = _ref5.name;

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'p',
          { id: 'name' },
          name
        )
      );
    }

    var ObservedComponent = (0, _observe2.default)(function (app) {
      return {
        name: app.getName()
      };
    })(Component);

    var fakeApp = {
      getName: function getName() {
        return 'FakeApp';
      }
    };

    function ComponentToRender(props) {
      return _react2.default.createElement(
        _Provider2.default,
        { app: fakeApp },
        _react2.default.createElement(ObservedComponent, props)
      );
    }

    var wrapper = (0, _enzyme.mount)(_react2.default.createElement(ComponentToRender, null));
    (0, _chai.expect)(wrapper.find(ObservedComponent)).to.have.length(1);
    (0, _chai.expect)(wrapper.find(Component)).to.have.length(1);
    (0, _chai.expect)(wrapper.find('#name')).to.have.length(1);
    (0, _chai.expect)(wrapper.text()).to.contain('FakeApp');
  });
});