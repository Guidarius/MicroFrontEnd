'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _BehaviorSubject = require('rxjs/BehaviorSubject');

var _map = require('rxjs/operator/map');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var RegionService = function () {
  function RegionService() {
    _classCallCheck(this, RegionService);

    this.props$ = new _BehaviorSubject.BehaviorSubject({});
  }

  _createClass(RegionService, [{
    key: 'emit',
    value: function emit() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      this.props$.next(props);
    }

    // @TODO: support synchronous versions
    // getName() {}
    // getKey() {}

  }, {
    key: 'getProps$',
    value: function getProps$() {
      return this.props$;
    }
  }, {
    key: 'getData$',
    value: function getData$() {
      var _context;

      return (_context = this.props$, _map.map).call(_context, function (props) {
        return props.data;
      });
    }
  }]);

  return RegionService;
}();

exports.default = RegionService;
module.exports = exports['default'];